import { BigInteger } from "jsbn";
import { createBallot, createElectionHash } from "./CreateBallot";
import { replaceBallot, reviveElection } from "./Model";

const election = JSON.parse('{"description":"X","name":"Test Samstag","public_key":{"group":{"g":"2402352677501852209227687703532399932712287657378364916510075318787663274146353219320285676155269678799694668298749389095083896573425601900601068477164491735474137283104610458681314511781646755400527402889846139864532661215055797097162016168270312886432456663834863635782106154918419982534315189740658186868651151358576410138882215396016043228843603930989333662772848406593138406010231675095763777982665103606822406635076697764025346253773085133173495194248967754052573659049492477631475991575198775177711481490920456600205478127054728238140972518639858334115700568353695553423781475582491896050296680037745308460627","p":"20694785691422546401013643657505008064922989295751104097100884787057374219242717401922237254497684338129066633138078958404960054389636289796393038773905722803605973749427671376777618898589872735865049081167099310535867780980030790491654063777173764198678527273474476341835600035698305193144284561701911000786737307333564123971732897913240474578834468260652327974647951137672658693582180046317922073668860052627186363386088796882120769432366149491002923444346373222145884100586421050242120365433561201320481118852408731077014151666200162313177169372189248078507711827842317498073276598828825169183103125680162072880719","q":"78571733251071885079927659812671450121821421258408794611510081919805623223441"},"y":"18478552998180328667106906340577036974200817227539334863676532422469343800372421137983128363433767107955978948874170135740975765034281891297373426576746131056846916490488514778086067290097061454354438724172048537407092198537584541460810028468333282993909514621570021059418748679867109859300387097647274988671544915825757967768321757101125125020532042302595133017298396529736850149438621537801933494966736664488998687266352904437624506311550413618334147435818520750495585767657390129003607859684653220753010403901703707231751721585479176565736548881849869631858790203164163794609503125964506657044947994195413651141720"},"questions":[{"answers":["Answer 1","Answer 2"],"blank":true,"min":1,"max":1,"question":"Question 1?"}],"uuid":"LDAZVBnfbfkQUB","administrator":"HW","credential_authority":"server"}',
    reviveElection);

const privateCred = "qzw-2ie-y6H-TSD-bGK";
const publicCred = new BigInteger(
        "10029862746834958143319323111454409387590534954793044404822945369994744260442089371115262190203934804675786564182282779251355216210946054924334240642428855729296421330257013472191135818728983762408033399214480787226293273548568201935296926228677329878383724409798063156434251931695634528137005735620183893704077873291267277770009834510370291772787286847855329543445255587222293360124381540329014428549828158233880255987012301417548047705955061799010400287887972369638914661074191768045129220621711681227211225478992052827599600084274797905069932956260221255187797967125498373990647751773001873864960847565145552988003");
const credentials = { privateCred, publicCred };

describe('CreateBallot', () => {

    test('should compute election hash', () => {
        expect(createElectionHash(election)).toEqual('AHHaEkaINgfPZTd1bPpAZ2rigNL3oWFCnlCA4GSh52A');
    });

    test('should reduce BigInteger', () => {
        const sum = [new BigInteger("10"), new BigInteger("20"), new BigInteger("40")]
            .reduce((left, right) => left.add(right));
        expect(sum.toString()).toBe("70");    
    });

    test('should create vote', () => {
        const ballot = createBallot(election, credentials, [[0, 1, 0]]);
        console.log(JSON.stringify(ballot, replaceBallot));
    });
});
